---
import Base from "./Base.astro";

export interface Props {
  content: {
    title: string;
    description: string;
    author: string;
    pubDate?: string;
    updatedDate?: string;
    heroImage?: string;
  };
}

const {
  content: { title, description, author, pubDate, updatedDate, heroImage },
} = Astro.props;
---

<Base title={`Eludris Blog | ${title}`} description={description}>
  <main>
    <article>
      <div id="head">
        {
          heroImage && (
            <img width={720} height={360} src={heroImage} alt="hero image" />
          )
        }
        <h1 class="title">{title}</h1>
        <p>{description}</p>
        {pubDate && author && <hr />}
        {
          pubDate && (
            <span>
              Published on <time>{pubDate}</time>
            </span>
          )
        }
        {pubDate && author && <span>|</span>}
        {author && <span>{`Authored by ${author}`}</span>}
        {
          updatedDate && (
            <div>
              Last updated on <time>{updatedDate}</time>
            </div>
          )
        }
      </div>
      <slot />
    </article>
  <script>
    let tags = ["h2", "h3", "h4", "h5", "h6"];
    for (let i = 0; i < tags.length; i++) {
      let nodes = document.getElementsByTagName(tags[i]);
      for (let j = 0; j < nodes.length; j++) {
        let node = nodes[j];
        node.innerHTML = `<a href="${node.id}" class="header-href">${node.innerText}<span class="header-symbol">${"#".repeat(i+1)}</span></a>`;
      }
    }
  </script>
  </main>
</Base>

<style>
  #head {
    text-align: center;
    margin: 10px;
  }

  main {
    margin: 5px auto;
    padding: 1em;
    width: 70vw;
    min-height: 100vh;
  }

  @media only screen and (max-width: 1200px) {
    #head {
      margin: 0;
    }
    main {
      margin: 5px auto;
      padding: 10px;
      width: calc(100vw - 20px);
    }
  }

  :global(.astro-code) {
    padding: 10px;
    border-radius: 4px;
    margin-left: 10px;
  }

  :global(code) {
    background-color: #0d1117;
  }

  :global(.header-href) {
    display: inline;
    color: inherit;
    border-width: 0;
    transition: border-width ease-in-out 75ms;
  }

  :global(.header-symbol) {
    margin-left: 5px;
    font-size: 0.7em;
    color: #aaaaaa;
    opacity: 0;
    transition: opacity ease-in-out 75ms;
  }

  :global(.header-href:hover > .header-symbol) {
    opacity: 1;
  }

  :global(p) {
    margin-left: 10px;
  }
</style>
